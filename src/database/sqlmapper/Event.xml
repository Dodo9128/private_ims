<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="Event">
	<sql id="initPrifix">
		/* SQL_QUERY */</sql>
	<sql id="pagingPreFix"><include refid="initPrifix" />
		<if test='pageNo !=null and !pageNo.equals("")'>SELECT A.* FROM
			(</if></sql>
	<sql id="orderby"><if test='sortColStr !=null and sortColStr !=""'>ORDER BY <foreach collection="sortColStr" item="item" index="index" separator=",">${item}</foreach></if></sql>
	<sql id="pagingPostFix"><if test = 'pageNo !=null and !pageNo.equals("")'>LIMIT #{pageSize, jdbcType=INTEGER} OFFSET #{pageOffset, jdbcType=INTEGER}
		) A</if></sql>
	<sql id="selectCount"><include refid="initPrifix" />
		SELECT	COUNT(1)</sql>

	<select id="getMaxEventId" parameterType="Map" resultType="Integer">
		SELECT CAST( IFNULL( MAX( RIGHT( id, 4 ) ), '0000' ) AS UNSIGNED INTEGER ) + 1 FROM event WHERE id LIKE #{system_id}
	</select>

	<select id="getNextEventId" parameterType="Map" resultType="String">
		SELECT concat( #{system_id}, LPAD( CAST( IFNULL( RIGHT( id, 4 ), '0000' ) AS UNSIGNED INTEGER ) + 1, 4, '0') )  FROM event WHERE id = #{event_id};
	</select>
	<!--=======================================
        목록 조회
     =======================================-->
	<sql id="listEventFromWhere">
		FROM 	event E
		WHERE	1=1
		<if	test='id !=null and id !=""'>
			AND E.id = #{id}
		</if>
		<if	test='system_id !=null and system_id !=""'>
			AND E.system_id = #{system_id}
		</if>
	</sql>

	<select id="listEventCount" parameterType="Map" resultType="Integer">
		<include refid="CommonSQL.selectCount" />
		<include refid="listEventFromWhere" />
	</select>

	<select id="listEvent" resultType="Map">
		<include refid="CommonSQL.pagingPreFix" />
		SELECT
		E.id
		, E.content_id
		, E.name
		, E.description
		, E.system_id
		, E.scheduled_at
		, E.live_status
		, FNC_CODENAME(E.live_status) AS live_status_name
		, E.is_public
		, FNC_CODENAME(E.is_public) AS is_public_name
		, E.status
		, FNC_CODENAME(E.status) AS status_name
		, E.banner
		, E.updated_at
		, E.registered_at
		<include refid="listEventFromWhere" />
		<include refid="CommonSQL.orderby" />
		<include refid="CommonSQL.pagingPostFix" />
	</select>

	<select id="getEvent4Mng" resultType="Map">
		SELECT
		E.id
		, E.content_id
		, E.name
		, E.description
		, E.system_id
		, E.scheduled_at
		, E.live_status
		, FNC_CODENAME(E.live_status) AS live_status_name
		, E.is_public
		, FNC_CODENAME(E.is_public) AS is_public_name
		, E.status
		, FNC_CODENAME(E.status) AS status_name
		, E.banner
		, E.updated_at
		, E.registered_at
		<include refid="listEventFromWhere" />
	</select>

	<update id="updateContentIdByEventId" parameterType="Map">
		<include refid="CommonSQL.initPrifix" />
		UPDATE event
		SET
		content_id = #{content_id}
		WHERE id = #{event_id}
		AND system_id = #{system_id}
	</update>

	<select id="getSystemId" resultType="String">
		SELECT
		E.system_id
		FROM
		event E
		WHERE	1=1
		AND id = #{event_id}
	</select>
</mapper>